# Use this only if SIM is enabled
#metricPrefix: "Custom Metrics|URL Monitor|"

# If SIM is not enabled, then use this
metricPrefix: "Server|Component:<TIER_ID>|Custom Metrics|URL Monitor|"
#To find the <COMPONENT_ID> in your environment,
#please follow the screenshot https://docs.appdynamics.com/display/PRO42/Build+a+Monitoring+Extension+Using+Java

# Client level configurations, common across all sites to be monitored
clientConfig:
  maxConnTotal:    1000
  maxConnPerRoute: 1000
  ignoreSslErrors: true
  #Comma separated list of enabled protocols
  #enabledProtocols: TLSv1,TLSv1.2,TLSv1.1
  userAgent:       Mozilla/5.0 (compatible; AppDynamics UrlMonitor; http://www.appdynamics.com/)

defaultParams:
  method:          GET
  socketTimeout:   30000
  connectTimeout:  30000
  numAttempts:     1

#Sites that need to be monitored
sites:
  #No authentication, with a pattern to match
  - name:     Google
    url:      http://www.google.com
    followRedirects: false
    groupName: MySites
    # Patterns to be matched, multiple patterns(to be matched) can be configured for a given site
    matchPatterns:
      - name: LuckyButton
        type: caseInsensitiveSubstring
        pattern: Google

  - name:     AppDynamics
    url:      http://www.appdynamics.com
    authType: BASIC

  # Basic Authentication with password encryption
#  - name:       My Controller
#    url:        https://mycontroller.saas.appdynamics.com/controller/rest/applications
#    username:   demouser@customer1
#    password:   welcome
#    encryptionKey: ""
#    encryptedPassword: "IGVtC9eudmgG8RDjmRjGPQ=="
#    authType: BASIC

#  - name:     File Download
#    url:      https://github.com/Appdynamics/url-monitoring-extension/releases/download/1.0.6/UrlMonitor.zip

  #NTLM Auth Sample Configuration
#  - name:     My Controller 2
#    url:      http://localhost:8090/controller
#    username: user@DOMAIN
#    password: password
#    authType: NTLM

    # Client Cert Auth Sample Configuration
#  - name:         LocalHost
#    url:          https://localhost:8443
#    password:     password
#    authType:     SSL
#    keyStoreType: SUNX509
#    keyStorePath: /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/bin/client.jks
#    keyStorePassword: password
#    trustStorePath: /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/bin/client.jks
#    trustStorePassword: password

    #POST request sample configuration
#  - name:     My POST site
#    url:      http://localhost:8293/api/v1/metrics
#    username:
#    password:
#    connectTimeout: 60000
#    usePreemptiveAuth: true
#    method:   POST
#    headers:
#      Content-Type: application/json
#    requestPayloadFile: src/test/resources/conf/postrequestPayloadFile
#    matchPatterns:
#      - name:       Error
#        type:       substring
#        pattern:    Error 400

    #Proxy Configuration
#  - name:     Google with proxy
#    url:      http://www.google.com
#    groupName: MySites
#    proxyConfig:
#      host: "localhost"
#      port: 80
#      username: ""
#      password: ""

metricConfig:

  - name: "Average Response Time (ms)"
    alias: "Average Response Time (ms)"
    aggregationType: "AVERAGE"
    timeRollUpType: "AVERAGE"
    clusterRollUpType: "INDIVIDUAL"

  - name: "Download Time (ms)"
    alias: "Download Time (ms)"
    aggregationType: "AVERAGE"
    timeRollUpType: "AVERAGE"
    clusterRollUpType: "INDIVIDUAL"

  - name: "First Byte Time (ms)"
    alias: "First Byte Time (ms)"
    aggregationType: "AVERAGE"
    timeRollUpType: "AVERAGE"
    clusterRollUpType: "INDIVIDUAL"

  - name: "Response Code"
    alias: "Response Code"
    aggregationType: "AVERAGE"
    timeRollUpType: "AVERAGE"
    clusterRollUpType: "INDIVIDUAL"

  - name: "Status"
    alias: "Status"
    aggregationType: "AVERAGE"
    timeRollUpType: "AVERAGE"
    clusterRollUpType: "INDIVIDUAL"

  - name: "Response Bytes"
    alias: "Response Bytes"
    aggregationType: "AVERAGE"
    timeRollUpType: "AVERAGE"
    clusterRollUpType: "INDIVIDUAL"


# number of concurrent tasks
numberOfThreads: 2

# If any of the following fields are not set, the values of the specific fields are set from the system properties of the corresponding fields as specified in the comments.
# If the system properties are not set for the field, then the data is retrieved from machine agent configFile. Please refer to ControllerInfoFactory for more details.
# Values provided here can be overridden if the same field is configured in either controller-info.xml or system properties.
controllerInfo:
  controllerHost: ""  # -Dappdynamics.controller.hostName
  controllerPort:  # -Dappdynamics.controller.port
  controllerSslEnabled: false # -Dappdynamics.controller.ssl.enabled
  enableOrchestration: false # N/A
  uniqueHostId: "" # -Dappdynamics.agent.uniqueHostId
  username: "admin" # -Dappdynamics.agent.monitors.controller.username
  password: "" # -Dappdynamics.agent.monitors.controller.password
  encryptedPassword: "j+0oxTzUtw2xAdaq4UUq/Q==" # -Dappdynamics.agent.monitors.controller.encryptedPassword
  accountAccessKey: "" # -Dappdynamics.agent.accountAccessKey
  account: "" # -Dappdynamics.agent.accountName
  machinePath: "" # -Dappdynamics.machine.agent.hierarchyPath
  simEnabled: false # -Dappdynamics.sim.enabled
  applicationName: "" # -Dappdynamics.agent.applicationName
  tierName: "" # -Dappdynamics.agent.tierName
  nodeName: "" # -Dappdynamics.agent.nodeName

#Encryption key for your controllerInfo password
encryptionKey: "abcd"